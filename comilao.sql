-- MySQL Script generated by MySQL Workbench
-- qua 14 nov 2018 14:51:31 -02
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mydb` ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`TipoEndereco`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`TipoEndereco` ;

CREATE TABLE IF NOT EXISTS `mydb`.`TipoEndereco` (
  `id_tipo_endereco` INT NOT NULL AUTO_INCREMENT,
  `nome_tipo_endereco` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_tipo_endereco`),
  UNIQUE INDEX `id_tipo_endereco_UNIQUE` (`id_tipo_endereco` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Estado`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Estado` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Estado` (
  `id_estado` INT NOT NULL AUTO_INCREMENT,
  `nome_estado` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_estado`),
  UNIQUE INDEX `id_estado_UNIQUE` (`id_estado` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Cidade`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Cidade` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Cidade` (
  `id_cidade` INT NOT NULL AUTO_INCREMENT,
  `nome_cidade` VARCHAR(45) NOT NULL,
  `Estado_id_estado` INT NOT NULL,
  PRIMARY KEY (`id_cidade`),
  UNIQUE INDEX `id_cidade_UNIQUE` (`id_cidade` ASC),
  INDEX `fk_Cidade_Estado1_idx` (`Estado_id_estado` ASC),
  CONSTRAINT `fk_Cidade_Estado1`
    FOREIGN KEY (`Estado_id_estado`)
    REFERENCES `mydb`.`Estado` (`id_estado`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Bairro`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Bairro` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Bairro` (
  `id_bairro` INT NOT NULL AUTO_INCREMENT,
  `nome_bairro` VARCHAR(45) NOT NULL,
  `Cidade_id_cidade` INT NOT NULL,
  PRIMARY KEY (`id_bairro`),
  UNIQUE INDEX `id_bairro_UNIQUE` (`id_bairro` ASC),
  INDEX `fk_Bairro_Cidade1_idx` (`Cidade_id_cidade` ASC),
  CONSTRAINT `fk_Bairro_Cidade1`
    FOREIGN KEY (`Cidade_id_cidade`)
    REFERENCES `mydb`.`Cidade` (`id_cidade`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Rua`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Rua` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Rua` (
  `id_rua` INT NOT NULL AUTO_INCREMENT,
  `nome_rua` VARCHAR(45) NOT NULL,
  `Bairro_id_bairro` INT NOT NULL,
  PRIMARY KEY (`id_rua`),
  UNIQUE INDEX `id_rua_UNIQUE` (`id_rua` ASC),
  INDEX `fk_Rua_Bairro1_idx` (`Bairro_id_bairro` ASC),
  CONSTRAINT `fk_Rua_Bairro1`
    FOREIGN KEY (`Bairro_id_bairro`)
    REFERENCES `mydb`.`Bairro` (`id_bairro`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Endereco`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Endereco` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Endereco` (
  `id_endereco` INT NOT NULL AUTO_INCREMENT,
  `nome_endereco` VARCHAR(45) NOT NULL,
  `TipoEndereco_id_tipo_endereco` INT NOT NULL,
  `numero_endereco` DECIMAL(10,0) NULL,
  `complemento_endereco` VARCHAR(45) NULL,
  `Rua_id_rua` INT NOT NULL,
  PRIMARY KEY (`id_endereco`),
  UNIQUE INDEX `id_endereco_UNIQUE` (`id_endereco` ASC),
  INDEX `fk_Endereco_TipoEndereco1_idx` (`TipoEndereco_id_tipo_endereco` ASC),
  INDEX `fk_Endereco_Rua1_idx` (`Rua_id_rua` ASC),
  CONSTRAINT `fk_Endereco_TipoEndereco1`
    FOREIGN KEY (`TipoEndereco_id_tipo_endereco`)
    REFERENCES `mydb`.`TipoEndereco` (`id_tipo_endereco`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Endereco_Rua1`
    FOREIGN KEY (`Rua_id_rua`)
    REFERENCES `mydb`.`Rua` (`id_rua`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Sexo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Sexo` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Sexo` (
  `id_sexo` INT NOT NULL AUTO_INCREMENT,
  `nome_sexo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_sexo`),
  UNIQUE INDEX `id_sexo_UNIQUE` (`id_sexo` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Escolaridade`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Escolaridade` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Escolaridade` (
  `id_escolaridade` INT NOT NULL AUTO_INCREMENT,
  `nome_escolaridade` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_escolaridade`),
  UNIQUE INDEX `id_escolaridade_UNIQUE` (`id_escolaridade` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Cargo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Cargo` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Cargo` (
  `id_cargo` INT NOT NULL AUTO_INCREMENT,
  `nome_cargo` VARCHAR(45) NOT NULL,
  `descricao_cargo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_cargo`),
  UNIQUE INDEX `id_cargo_UNIQUE` (`id_cargo` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`EstadoCivil`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`EstadoCivil` ;

CREATE TABLE IF NOT EXISTS `mydb`.`EstadoCivil` (
  `id_estado_civil` INT NOT NULL AUTO_INCREMENT,
  `nome_estado_civil` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_estado_civil`),
  UNIQUE INDEX `idEstadoCivil_UNIQUE` (`id_estado_civil` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Pais`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Pais` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Pais` (
  `id_pais` INT NOT NULL AUTO_INCREMENT,
  `nome_pais` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_pais`),
  UNIQUE INDEX `id_pais_UNIQUE` (`id_pais` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Funcionario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Funcionario` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Funcionario` (
  `id_func` INT NOT NULL AUTO_INCREMENT,
  `cpf_func` DECIMAL(11) NOT NULL,
  `nome_func` VARCHAR(45) NOT NULL,
  `carteira_trabalho_func` DECIMAL(10,0) NOT NULL,
  `salario_func` FLOAT NOT NULL,
  `Endereco_id_endereco` INT NOT NULL,
  `nome_do_pai_func` VARCHAR(45) NULL,
  `nome_da_mae_func` VARCHAR(45) NOT NULL,
  `rg_func` DECIMAL(10,0) NOT NULL,
  `email_func` VARCHAR(45) NOT NULL,
  `Sexo_id_sexo` INT NOT NULL,
  `Escolaridade_id_escolaridade` INT NOT NULL,
  `Cargo_id_cargo` INT NOT NULL,
  `EstadoCivil_id_estado_civil` INT NOT NULL,
  `Pais_id_pais` INT NOT NULL,
  `Estado_id_estado` INT NOT NULL,
  PRIMARY KEY (`id_func`, `cpf_func`),
  UNIQUE INDEX `cpf_func_UNIQUE` (`cpf_func` ASC),
  UNIQUE INDEX `carteira_trabalho_func_UNIQUE` (`carteira_trabalho_func` ASC),
  UNIQUE INDEX `id_func_UNIQUE` (`id_func` ASC),
  INDEX `fk_Funcionario_Endereco1_idx` (`Endereco_id_endereco` ASC),
  INDEX `fk_Funcionario_Sexo1_idx` (`Sexo_id_sexo` ASC),
  INDEX `fk_Funcionario_Escolaridade1_idx` (`Escolaridade_id_escolaridade` ASC),
  INDEX `fk_Funcionario_Cargo1_idx` (`Cargo_id_cargo` ASC),
  INDEX `fk_Funcionario_EstadoCivil1_idx` (`EstadoCivil_id_estado_civil` ASC),
  INDEX `fk_Funcionario_Pais1_idx` (`Pais_id_pais` ASC),
  INDEX `fk_Funcionario_Estado1_idx` (`Estado_id_estado` ASC),
  CONSTRAINT `fk_Funcionario_Endereco1`
    FOREIGN KEY (`Endereco_id_endereco`)
    REFERENCES `mydb`.`Endereco` (`id_endereco`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Funcionario_Sexo1`
    FOREIGN KEY (`Sexo_id_sexo`)
    REFERENCES `mydb`.`Sexo` (`id_sexo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Funcionario_Escolaridade1`
    FOREIGN KEY (`Escolaridade_id_escolaridade`)
    REFERENCES `mydb`.`Escolaridade` (`id_escolaridade`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Funcionario_Cargo1`
    FOREIGN KEY (`Cargo_id_cargo`)
    REFERENCES `mydb`.`Cargo` (`id_cargo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Funcionario_EstadoCivil1`
    FOREIGN KEY (`EstadoCivil_id_estado_civil`)
    REFERENCES `mydb`.`EstadoCivil` (`id_estado_civil`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Funcionario_Pais1`
    FOREIGN KEY (`Pais_id_pais`)
    REFERENCES `mydb`.`Pais` (`id_pais`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Funcionario_Estado1`
    FOREIGN KEY (`Estado_id_estado`)
    REFERENCES `mydb`.`Estado` (`id_estado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Andar`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Andar` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Andar` (
  `idAndar` INT NOT NULL,
  `numero_andar` INT NULL,
  `descricao_andar` VARCHAR(45) NULL,
  PRIMARY KEY (`idAndar`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Mesa`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Mesa` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Mesa` (
  `id_mesa` INT NOT NULL AUTO_INCREMENT,
  `numero_mesa` INT NOT NULL,
  `Andar_id_andar` INT NOT NULL,
  PRIMARY KEY (`id_mesa`),
  UNIQUE INDEX `id_mesa_UNIQUE` (`id_mesa` ASC),
  UNIQUE INDEX `numero_mesa_UNIQUE` (`numero_mesa` ASC),
  INDEX `fk_Mesa_Andar1_idx` (`Andar_id_andar` ASC),
  CONSTRAINT `fk_Mesa_Andar1`
    FOREIGN KEY (`Andar_id_andar`)
    REFERENCES `mydb`.`Andar` (`idAndar`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Cliente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Cliente` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Cliente` (
  `id_cliente` INT NOT NULL AUTO_INCREMENT,
  `cpf_cliente` DECIMAL(11) NOT NULL,
  `nome_cliente` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_cliente`, `cpf_cliente`),
  UNIQUE INDEX `id_cliente_UNIQUE` (`id_cliente` ASC),
  UNIQUE INDEX `cpf_cliente_UNIQUE` (`cpf_cliente` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`TipoTelefone`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`TipoTelefone` ;

CREATE TABLE IF NOT EXISTS `mydb`.`TipoTelefone` (
  `id_tipo_telefone` INT NOT NULL AUTO_INCREMENT,
  `nome_tipo_telefone` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_tipo_telefone`),
  UNIQUE INDEX `id_tipo_telefone_UNIQUE` (`id_tipo_telefone` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Telefone`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Telefone` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Telefone` (
  `id_telefone` INT NOT NULL AUTO_INCREMENT,
  `numero_telefone` DECIMAL(10,0) NOT NULL,
  `TipoTelefone_id_tipo_telefone` INT NOT NULL,
  PRIMARY KEY (`id_telefone`),
  UNIQUE INDEX `id_telefone_UNIQUE` (`id_telefone` ASC),
  INDEX `fk_Telefone_TipoTelefone1_idx` (`TipoTelefone_id_tipo_telefone` ASC),
  CONSTRAINT `fk_Telefone_TipoTelefone1`
    FOREIGN KEY (`TipoTelefone_id_tipo_telefone`)
    REFERENCES `mydb`.`TipoTelefone` (`id_tipo_telefone`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`TelefoneFuncionario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`TelefoneFuncionario` ;

CREATE TABLE IF NOT EXISTS `mydb`.`TelefoneFuncionario` (
  `id_telefone_func` INT NOT NULL AUTO_INCREMENT,
  `Telefone_id_telefone` INT NOT NULL,
  `Funcionario_id_func` INT NOT NULL,
  PRIMARY KEY (`id_telefone_func`),
  UNIQUE INDEX `id_telefone_garcom_UNIQUE` (`id_telefone_func` ASC),
  INDEX `fk_TelefoneFuncionario_Telefone1_idx` (`Telefone_id_telefone` ASC),
  INDEX `fk_TelefoneFuncionario_Funcionario1_idx` (`Funcionario_id_func` ASC),
  CONSTRAINT `fk_TelefoneFuncionario_Telefone1`
    FOREIGN KEY (`Telefone_id_telefone`)
    REFERENCES `mydb`.`Telefone` (`id_telefone`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TelefoneFuncionario_Funcionario1`
    FOREIGN KEY (`Funcionario_id_func`)
    REFERENCES `mydb`.`Funcionario` (`id_func`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`TelefoneCliente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`TelefoneCliente` ;

CREATE TABLE IF NOT EXISTS `mydb`.`TelefoneCliente` (
  `id_telefone_cliente` INT NOT NULL AUTO_INCREMENT,
  `Telefone_id_telefone` INT NOT NULL,
  `Cliente_id_cliente` INT NOT NULL,
  PRIMARY KEY (`id_telefone_cliente`),
  UNIQUE INDEX `id_telefone_cliente_UNIQUE` (`id_telefone_cliente` ASC),
  INDEX `fk_TelefoneCliente_Telefone1_idx` (`Telefone_id_telefone` ASC),
  INDEX `fk_TelefoneCliente_Cliente1_idx` (`Cliente_id_cliente` ASC),
  CONSTRAINT `fk_TelefoneCliente_Telefone1`
    FOREIGN KEY (`Telefone_id_telefone`)
    REFERENCES `mydb`.`Telefone` (`id_telefone`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TelefoneCliente_Cliente1`
    FOREIGN KEY (`Cliente_id_cliente`)
    REFERENCES `mydb`.`Cliente` (`id_cliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`FormatoPagamento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`FormatoPagamento` ;

CREATE TABLE IF NOT EXISTS `mydb`.`FormatoPagamento` (
  `id_formato_pagamento` INT NOT NULL AUTO_INCREMENT,
  `nome_formato_pagamento` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_formato_pagamento`),
  UNIQUE INDEX `id_formato_pagamento_UNIQUE` (`id_formato_pagamento` ASC),
  UNIQUE INDEX `nome_formato_pagamento_UNIQUE` (`nome_formato_pagamento` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Pagamento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Pagamento` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Pagamento` (
  `id_pagamento` INT NOT NULL AUTO_INCREMENT,
  `Valor` FLOAT NOT NULL,
  `Data` DATE NOT NULL,
  `Hora` TIME NOT NULL,
  `FormatoPagamento_id_formato_pagamento` INT NOT NULL,
  PRIMARY KEY (`id_pagamento`),
  UNIQUE INDEX `id_pagamento_UNIQUE` (`id_pagamento` ASC),
  INDEX `fk_Pagamento_FormatoPagamento1_idx` (`FormatoPagamento_id_formato_pagamento` ASC),
  CONSTRAINT `fk_Pagamento_FormatoPagamento1`
    FOREIGN KEY (`FormatoPagamento_id_formato_pagamento`)
    REFERENCES `mydb`.`FormatoPagamento` (`id_formato_pagamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Fornecedor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Fornecedor` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Fornecedor` (
  `id_fornecedor` INT NOT NULL AUTO_INCREMENT,
  `cnpj_fornecedor` DECIMAL(10,0) NOT NULL,
  `nome_fornecedor` VARCHAR(45) NULL,
  `email_fornecedor` VARCHAR(45) NULL,
  `Endereco_id_endereco` INT NOT NULL,
  PRIMARY KEY (`id_fornecedor`, `cnpj_fornecedor`),
  UNIQUE INDEX `id_fornecedor_UNIQUE` (`id_fornecedor` ASC),
  INDEX `fk_Fornecedor_Endereco1_idx` (`Endereco_id_endereco` ASC),
  CONSTRAINT `fk_Fornecedor_Endereco1`
    FOREIGN KEY (`Endereco_id_endereco`)
    REFERENCES `mydb`.`Endereco` (`id_endereco`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`TelefoneFornecedor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`TelefoneFornecedor` ;

CREATE TABLE IF NOT EXISTS `mydb`.`TelefoneFornecedor` (
  `id_telefone_fornecedor` INT NOT NULL AUTO_INCREMENT,
  `Telefone_id_telefone` INT NOT NULL,
  `Fornecedor_id_fornecedor` INT NOT NULL,
  PRIMARY KEY (`id_telefone_fornecedor`),
  UNIQUE INDEX `id_telefone_fornecedor_UNIQUE` (`id_telefone_fornecedor` ASC),
  INDEX `fk_TelefoneFornecedor_Telefone1_idx` (`Telefone_id_telefone` ASC),
  INDEX `fk_TelefoneFornecedor_Fornecedor1_idx` (`Fornecedor_id_fornecedor` ASC),
  CONSTRAINT `fk_TelefoneFornecedor_Telefone1`
    FOREIGN KEY (`Telefone_id_telefone`)
    REFERENCES `mydb`.`Telefone` (`id_telefone`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TelefoneFornecedor_Fornecedor1`
    FOREIGN KEY (`Fornecedor_id_fornecedor`)
    REFERENCES `mydb`.`Fornecedor` (`id_fornecedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Pedido`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Pedido` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Pedido` (
  `id_pedido` INT NOT NULL AUTO_INCREMENT,
  `valor_pedido` FLOAT NOT NULL,
  `data_pedido` DATE NULL,
  `Pagamento_id_pagamento` INT NULL,
  PRIMARY KEY (`id_pedido`),
  UNIQUE INDEX `id_pedido_UNIQUE` (`id_pedido` ASC),
  INDEX `fk_Pedido_Pagamento1_idx` (`Pagamento_id_pagamento` ASC),
  CONSTRAINT `fk_Pedido_Pagamento1`
    FOREIGN KEY (`Pagamento_id_pagamento`)
    REFERENCES `mydb`.`Pagamento` (`id_pagamento`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Categoria`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Categoria` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Categoria` (
  `id_categoria` INT NOT NULL AUTO_INCREMENT,
  `nome_categoria` VARCHAR(45) NULL,
  PRIMARY KEY (`id_categoria`),
  UNIQUE INDEX `id_categoria_UNIQUE` (`id_categoria` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Produto` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Produto` (
  `id_produto` INT NOT NULL AUTO_INCREMENT,
  `nome_produto` VARCHAR(45) NULL,
  `descricao_produto` VARCHAR(45) NULL,
  `preco_produto` FLOAT NULL,
  `qtd_produto_vendidos` INT NULL,
  `qtd_produto_estoque` INT NULL,
  `Categoria_id_categoria` INT NOT NULL,
  PRIMARY KEY (`id_produto`),
  UNIQUE INDEX `id_produto_UNIQUE` (`id_produto` ASC),
  INDEX `fk_Produto_Categoria1_idx` (`Categoria_id_categoria` ASC),
  CONSTRAINT `fk_Produto_Categoria1`
    FOREIGN KEY (`Categoria_id_categoria`)
    REFERENCES `mydb`.`Categoria` (`id_categoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`PedidoProduto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`PedidoProduto` ;

CREATE TABLE IF NOT EXISTS `mydb`.`PedidoProduto` (
  `id_pedido_produto` INT NOT NULL AUTO_INCREMENT,
  `Pedido_id_pedido` INT NOT NULL,
  `Produto_id_produto` INT NOT NULL,
  `qtd_produto` INT NULL,
  PRIMARY KEY (`id_pedido_produto`),
  UNIQUE INDEX `id_pedido_produto_UNIQUE` (`id_pedido_produto` ASC),
  INDEX `fk_PedidoProduto_Pedido_idx` (`Pedido_id_pedido` ASC),
  INDEX `fk_PedidoProduto_Produto_idx` (`Produto_id_produto` ASC),
  CONSTRAINT `fk_PedidoProduto_Pedido`
    FOREIGN KEY (`Pedido_id_pedido`)
    REFERENCES `mydb`.`Pedido` (`id_pedido`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PedidoProduto_Produto`
    FOREIGN KEY (`Produto_id_produto`)
    REFERENCES `mydb`.`Produto` (`id_produto`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Venda`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Venda` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Venda` (
  `id_venda` INT NOT NULL AUTO_INCREMENT,
  `Mesa_id_mesa` INT NOT NULL,
  `Pedido_id_pedido` INT NOT NULL,
  `Funcionario_id_func` INT NOT NULL,
  `Cliente_id_cliente` INT NOT NULL,
  PRIMARY KEY (`id_venda`),
  UNIQUE INDEX `id_tipo_pedido_UNIQUE` (`id_venda` ASC),
  INDEX `fk_Venda_Mesa1_idx` (`Mesa_id_mesa` ASC),
  INDEX `fk_Venda_Pedido1_idx` (`Pedido_id_pedido` ASC),
  INDEX `fk_Venda_Funcionario1_idx` (`Funcionario_id_func` ASC),
  INDEX `fk_Venda_Cliente1_idx` (`Cliente_id_cliente` ASC),
  CONSTRAINT `fk_Venda_Mesa1`
    FOREIGN KEY (`Mesa_id_mesa`)
    REFERENCES `mydb`.`Mesa` (`id_mesa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Venda_Pedido1`
    FOREIGN KEY (`Pedido_id_pedido`)
    REFERENCES `mydb`.`Pedido` (`id_pedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Venda_Funcionario1`
    FOREIGN KEY (`Funcionario_id_func`)
    REFERENCES `mydb`.`Funcionario` (`id_func`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Venda_Cliente1`
    FOREIGN KEY (`Cliente_id_cliente`)
    REFERENCES `mydb`.`Cliente` (`id_cliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Reposicao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Reposicao` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Reposicao` (
  `id_reposicao` INT NOT NULL AUTO_INCREMENT,
  `Pedido_id_pedido` INT NOT NULL,
  `Fornecedor_id_fornecedor` INT NOT NULL,
  PRIMARY KEY (`id_reposicao`),
  UNIQUE INDEX `id_reposicao_UNIQUE` (`id_reposicao` ASC),
  INDEX `fk_Reposicao_Pedido1_idx` (`Pedido_id_pedido` ASC),
  INDEX `fk_Reposicao_Fornecedor1_idx` (`Fornecedor_id_fornecedor` ASC),
  CONSTRAINT `fk_Reposicao_Pedido1`
    FOREIGN KEY (`Pedido_id_pedido`)
    REFERENCES `mydb`.`Pedido` (`id_pedido`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Reposicao_Fornecedor1`
    FOREIGN KEY (`Fornecedor_id_fornecedor`)
    REFERENCES `mydb`.`Fornecedor` (`id_fornecedor`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `mydb`.`TipoEndereco`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`TipoEndereco` (`id_tipo_endereco`, `nome_tipo_endereco`) VALUES (1, 'Residencial');
INSERT INTO `mydb`.`TipoEndereco` (`id_tipo_endereco`, `nome_tipo_endereco`) VALUES (2, 'Comercial');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Estado`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Estado` (`id_estado`, `nome_estado`) VALUES (1, 'Acre');
INSERT INTO `mydb`.`Estado` (`id_estado`, `nome_estado`) VALUES (2, 'Minas Gerais');
INSERT INTO `mydb`.`Estado` (`id_estado`, `nome_estado`) VALUES (3, 'Pernambuco');
INSERT INTO `mydb`.`Estado` (`id_estado`, `nome_estado`) VALUES (4, 'Paraná');
INSERT INTO `mydb`.`Estado` (`id_estado`, `nome_estado`) VALUES (5, 'Goiás');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Cidade`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Cidade` (`id_cidade`, `nome_cidade`, `Estado_id_estado`) VALUES (1, 'Curitiba', 4);
INSERT INTO `mydb`.`Cidade` (`id_cidade`, `nome_cidade`, `Estado_id_estado`) VALUES (2, 'Belo Horizonte', 2);
INSERT INTO `mydb`.`Cidade` (`id_cidade`, `nome_cidade`, `Estado_id_estado`) VALUES (3, 'Rio Branco', 1);
INSERT INTO `mydb`.`Cidade` (`id_cidade`, `nome_cidade`, `Estado_id_estado`) VALUES (4, 'Recife', 3);
INSERT INTO `mydb`.`Cidade` (`id_cidade`, `nome_cidade`, `Estado_id_estado`) VALUES (5, 'Goiânia', 5);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Bairro`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Bairro` (`id_bairro`, `nome_bairro`, `Cidade_id_cidade`) VALUES (1, 'Centro', 1);
INSERT INTO `mydb`.`Bairro` (`id_bairro`, `nome_bairro`, `Cidade_id_cidade`) VALUES (2, 'Centro', 2);
INSERT INTO `mydb`.`Bairro` (`id_bairro`, `nome_bairro`, `Cidade_id_cidade`) VALUES (3, 'Centro', 3);
INSERT INTO `mydb`.`Bairro` (`id_bairro`, `nome_bairro`, `Cidade_id_cidade`) VALUES (4, 'Centro', 4);
INSERT INTO `mydb`.`Bairro` (`id_bairro`, `nome_bairro`, `Cidade_id_cidade`) VALUES (5, 'Centro', 5);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Rua`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Rua` (`id_rua`, `nome_rua`, `Bairro_id_bairro`) VALUES (1, 'Rua Principal', 1);
INSERT INTO `mydb`.`Rua` (`id_rua`, `nome_rua`, `Bairro_id_bairro`) VALUES (2, 'Rua Principal', 2);
INSERT INTO `mydb`.`Rua` (`id_rua`, `nome_rua`, `Bairro_id_bairro`) VALUES (3, 'Rua Principal', 3);
INSERT INTO `mydb`.`Rua` (`id_rua`, `nome_rua`, `Bairro_id_bairro`) VALUES (4, 'Rua Principal', 4);
INSERT INTO `mydb`.`Rua` (`id_rua`, `nome_rua`, `Bairro_id_bairro`) VALUES (5, 'Rua Principal', 5);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Endereco`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Endereco` (`id_endereco`, `nome_endereco`, `TipoEndereco_id_tipo_endereco`, `numero_endereco`, `complemento_endereco`, `Rua_id_rua`) VALUES (1, 'Casa', 1, 58, 'Casa dos Fundos', 1);
INSERT INTO `mydb`.`Endereco` (`id_endereco`, `nome_endereco`, `TipoEndereco_id_tipo_endereco`, `numero_endereco`, `complemento_endereco`, `Rua_id_rua`) VALUES (2, 'Apartamento', 1, 46, NULL, 2);
INSERT INTO `mydb`.`Endereco` (`id_endereco`, `nome_endereco`, `TipoEndereco_id_tipo_endereco`, `numero_endereco`, `complemento_endereco`, `Rua_id_rua`) VALUES (3, 'Lote', 2, 03, NULL, 3);
INSERT INTO `mydb`.`Endereco` (`id_endereco`, `nome_endereco`, `TipoEndereco_id_tipo_endereco`, `numero_endereco`, `complemento_endereco`, `Rua_id_rua`) VALUES (4, 'Loja', 2, 17, NULL, 4);
INSERT INTO `mydb`.`Endereco` (`id_endereco`, `nome_endereco`, `TipoEndereco_id_tipo_endereco`, `numero_endereco`, `complemento_endereco`, `Rua_id_rua`) VALUES (5, 'Loja', 2, 36, NULL, 5);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Sexo`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Sexo` (`id_sexo`, `nome_sexo`) VALUES (1, 'Masculino');
INSERT INTO `mydb`.`Sexo` (`id_sexo`, `nome_sexo`) VALUES (2, 'Feminino');
INSERT INTO `mydb`.`Sexo` (`id_sexo`, `nome_sexo`) VALUES (3, 'Outro');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Escolaridade`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Escolaridade` (`id_escolaridade`, `nome_escolaridade`) VALUES (1, 'Fundamental Completo');
INSERT INTO `mydb`.`Escolaridade` (`id_escolaridade`, `nome_escolaridade`) VALUES (2, 'Fundamental Incompleto');
INSERT INTO `mydb`.`Escolaridade` (`id_escolaridade`, `nome_escolaridade`) VALUES (3, 'Médio Completo');
INSERT INTO `mydb`.`Escolaridade` (`id_escolaridade`, `nome_escolaridade`) VALUES (4, 'Médio Incompleto');
INSERT INTO `mydb`.`Escolaridade` (`id_escolaridade`, `nome_escolaridade`) VALUES (5, 'Superior Completo');
INSERT INTO `mydb`.`Escolaridade` (`id_escolaridade`, `nome_escolaridade`) VALUES (6, 'Superior Incompleto');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Cargo`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Cargo` (`id_cargo`, `nome_cargo`, `descricao_cargo`) VALUES (1, 'Cozinheiro', 'Trabalha na Cozinha');
INSERT INTO `mydb`.`Cargo` (`id_cargo`, `nome_cargo`, `descricao_cargo`) VALUES (2, 'Garçom', 'Serve Comidas');
INSERT INTO `mydb`.`Cargo` (`id_cargo`, `nome_cargo`, `descricao_cargo`) VALUES (3, 'Recepcionista', 'Atende na entrada');
INSERT INTO `mydb`.`Cargo` (`id_cargo`, `nome_cargo`, `descricao_cargo`) VALUES (4, 'Segurança', 'Segurança da porta');
INSERT INTO `mydb`.`Cargo` (`id_cargo`, `nome_cargo`, `descricao_cargo`) VALUES (5, 'Limpeza', 'Limpa a bagunça');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`EstadoCivil`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`EstadoCivil` (`id_estado_civil`, `nome_estado_civil`) VALUES (1, 'Solteiro');
INSERT INTO `mydb`.`EstadoCivil` (`id_estado_civil`, `nome_estado_civil`) VALUES (2, 'Casado');
INSERT INTO `mydb`.`EstadoCivil` (`id_estado_civil`, `nome_estado_civil`) VALUES (3, 'Viúvo');
INSERT INTO `mydb`.`EstadoCivil` (`id_estado_civil`, `nome_estado_civil`) VALUES (4, 'Divorciado');
INSERT INTO `mydb`.`EstadoCivil` (`id_estado_civil`, `nome_estado_civil`) VALUES (5, 'União Estável');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Pais`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Pais` (`id_pais`, `nome_pais`) VALUES (1, 'Brasil');
INSERT INTO `mydb`.`Pais` (`id_pais`, `nome_pais`) VALUES (2, 'Peru');
INSERT INTO `mydb`.`Pais` (`id_pais`, `nome_pais`) VALUES (3, 'Chile');
INSERT INTO `mydb`.`Pais` (`id_pais`, `nome_pais`) VALUES (4, 'Alemanha');
INSERT INTO `mydb`.`Pais` (`id_pais`, `nome_pais`) VALUES (5, 'China');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Funcionario`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Funcionario` (`id_func`, `cpf_func`, `nome_func`, `carteira_trabalho_func`, `salario_func`, `Endereco_id_endereco`, `nome_do_pai_func`, `nome_da_mae_func`, `rg_func`, `email_func`, `Sexo_id_sexo`, `Escolaridade_id_escolaridade`, `Cargo_id_cargo`, `EstadoCivil_id_estado_civil`, `Pais_id_pais`, `Estado_id_estado`) VALUES (1, 78595740595, 'Lídia', 123456, 2345, 1, 'Marcos', 'Maria', 3698524, 'lidia@email.com', 2, 3, 1, 2, 1, 1);
INSERT INTO `mydb`.`Funcionario` (`id_func`, `cpf_func`, `nome_func`, `carteira_trabalho_func`, `salario_func`, `Endereco_id_endereco`, `nome_do_pai_func`, `nome_da_mae_func`, `rg_func`, `email_func`, `Sexo_id_sexo`, `Escolaridade_id_escolaridade`, `Cargo_id_cargo`, `EstadoCivil_id_estado_civil`, `Pais_id_pais`, `Estado_id_estado`) VALUES (2, 58967502598, 'Pedro', 654321, 2345, 1, 'Breno', 'Bruna', 7985642, 'pedro@email.com', 1, 4, 2, 3, 1, 2);
INSERT INTO `mydb`.`Funcionario` (`id_func`, `cpf_func`, `nome_func`, `carteira_trabalho_func`, `salario_func`, `Endereco_id_endereco`, `nome_do_pai_func`, `nome_da_mae_func`, `rg_func`, `email_func`, `Sexo_id_sexo`, `Escolaridade_id_escolaridade`, `Cargo_id_cargo`, `EstadoCivil_id_estado_civil`, `Pais_id_pais`, `Estado_id_estado`) VALUES (3, 75315425898, 'Paulo', 546123, 2345, 2, 'Caio', 'Cecília', 1258965, 'paulo@email.com', 1, 3, 3, 2, 1, 3);
INSERT INTO `mydb`.`Funcionario` (`id_func`, `cpf_func`, `nome_func`, `carteira_trabalho_func`, `salario_func`, `Endereco_id_endereco`, `nome_do_pai_func`, `nome_da_mae_func`, `rg_func`, `email_func`, `Sexo_id_sexo`, `Escolaridade_id_escolaridade`, `Cargo_id_cargo`, `EstadoCivil_id_estado_civil`, `Pais_id_pais`, `Estado_id_estado`) VALUES (4, 83592458520, 'Ana', 654123, 2345, 2, 'Dário', 'Dilma', 7954825, 'ana@email.com', 2, 4, 4, 1, 1, 2);
INSERT INTO `mydb`.`Funcionario` (`id_func`, `cpf_func`, `nome_func`, `carteira_trabalho_func`, `salario_func`, `Endereco_id_endereco`, `nome_do_pai_func`, `nome_da_mae_func`, `rg_func`, `email_func`, `Sexo_id_sexo`, `Escolaridade_id_escolaridade`, `Cargo_id_cargo`, `EstadoCivil_id_estado_civil`, `Pais_id_pais`, `Estado_id_estado`) VALUES (5, 25635142587, 'Bruna', 351426, 2345, 1, 'Heitor', 'Helena', 4658975, 'bruna@email.com', 2, 5, 5, 4, 1, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Andar`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Andar` (`idAndar`, `numero_andar`, `descricao_andar`) VALUES (1, 1, 'Primeiro andar');
INSERT INTO `mydb`.`Andar` (`idAndar`, `numero_andar`, `descricao_andar`) VALUES (2, 2, 'Segundo andar');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Mesa`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Mesa` (`id_mesa`, `numero_mesa`, `Andar_id_andar`) VALUES (1, 1, 1);
INSERT INTO `mydb`.`Mesa` (`id_mesa`, `numero_mesa`, `Andar_id_andar`) VALUES (2, 2, 1);
INSERT INTO `mydb`.`Mesa` (`id_mesa`, `numero_mesa`, `Andar_id_andar`) VALUES (3, 3, 1);
INSERT INTO `mydb`.`Mesa` (`id_mesa`, `numero_mesa`, `Andar_id_andar`) VALUES (4, 4, 2);
INSERT INTO `mydb`.`Mesa` (`id_mesa`, `numero_mesa`, `Andar_id_andar`) VALUES (5, 5, 2);
INSERT INTO `mydb`.`Mesa` (`id_mesa`, `numero_mesa`, `Andar_id_andar`) VALUES (6, 6, 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Cliente`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Cliente` (`id_cliente`, `cpf_cliente`, `nome_cliente`) VALUES (1, 04896524823, 'Pedro');
INSERT INTO `mydb`.`Cliente` (`id_cliente`, `cpf_cliente`, `nome_cliente`) VALUES (2, 15975698264, 'Maria');
INSERT INTO `mydb`.`Cliente` (`id_cliente`, `cpf_cliente`, `nome_cliente`) VALUES (3, 95375685219, 'João');
INSERT INTO `mydb`.`Cliente` (`id_cliente`, `cpf_cliente`, `nome_cliente`) VALUES (4, 45685295102, 'Gabriel');
INSERT INTO `mydb`.`Cliente` (`id_cliente`, `cpf_cliente`, `nome_cliente`) VALUES (5, 76194385245, 'Ana');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`TipoTelefone`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`TipoTelefone` (`id_tipo_telefone`, `nome_tipo_telefone`) VALUES (1, 'Residencial');
INSERT INTO `mydb`.`TipoTelefone` (`id_tipo_telefone`, `nome_tipo_telefone`) VALUES (2, 'Celular');
INSERT INTO `mydb`.`TipoTelefone` (`id_tipo_telefone`, `nome_tipo_telefone`) VALUES (3, 'Comercial');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Telefone`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Telefone` (`id_telefone`, `numero_telefone`, `TipoTelefone_id_tipo_telefone`) VALUES (1, 35689955, 1);
INSERT INTO `mydb`.`Telefone` (`id_telefone`, `numero_telefone`, `TipoTelefone_id_tipo_telefone`) VALUES (2, 35645522, 1);
INSERT INTO `mydb`.`Telefone` (`id_telefone`, `numero_telefone`, `TipoTelefone_id_tipo_telefone`) VALUES (3, 34629988, 1);
INSERT INTO `mydb`.`Telefone` (`id_telefone`, `numero_telefone`, `TipoTelefone_id_tipo_telefone`) VALUES (4, 36975482, 3);
INSERT INTO `mydb`.`Telefone` (`id_telefone`, `numero_telefone`, `TipoTelefone_id_tipo_telefone`) VALUES (5, 39865744, 3);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`TelefoneFuncionario`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`TelefoneFuncionario` (`id_telefone_func`, `Telefone_id_telefone`, `Funcionario_id_func`) VALUES (1, 1, 1);
INSERT INTO `mydb`.`TelefoneFuncionario` (`id_telefone_func`, `Telefone_id_telefone`, `Funcionario_id_func`) VALUES (2, 2, 2);
INSERT INTO `mydb`.`TelefoneFuncionario` (`id_telefone_func`, `Telefone_id_telefone`, `Funcionario_id_func`) VALUES (3, 3, 3);
INSERT INTO `mydb`.`TelefoneFuncionario` (`id_telefone_func`, `Telefone_id_telefone`, `Funcionario_id_func`) VALUES (4, 2, 4);
INSERT INTO `mydb`.`TelefoneFuncionario` (`id_telefone_func`, `Telefone_id_telefone`, `Funcionario_id_func`) VALUES (5, 1, 5);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`TelefoneCliente`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`TelefoneCliente` (`id_telefone_cliente`, `Telefone_id_telefone`, `Cliente_id_cliente`) VALUES (1, 1, 1);
INSERT INTO `mydb`.`TelefoneCliente` (`id_telefone_cliente`, `Telefone_id_telefone`, `Cliente_id_cliente`) VALUES (2, 2, 2);
INSERT INTO `mydb`.`TelefoneCliente` (`id_telefone_cliente`, `Telefone_id_telefone`, `Cliente_id_cliente`) VALUES (3, 3, 3);
INSERT INTO `mydb`.`TelefoneCliente` (`id_telefone_cliente`, `Telefone_id_telefone`, `Cliente_id_cliente`) VALUES (4, 2, 4);
INSERT INTO `mydb`.`TelefoneCliente` (`id_telefone_cliente`, `Telefone_id_telefone`, `Cliente_id_cliente`) VALUES (5, 1, 5);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`FormatoPagamento`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`FormatoPagamento` (`id_formato_pagamento`, `nome_formato_pagamento`) VALUES (1, 'Dinheiro');
INSERT INTO `mydb`.`FormatoPagamento` (`id_formato_pagamento`, `nome_formato_pagamento`) VALUES (2, 'Crédito');
INSERT INTO `mydb`.`FormatoPagamento` (`id_formato_pagamento`, `nome_formato_pagamento`) VALUES (3, 'Débito');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Pagamento`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Pagamento` (`id_pagamento`, `Valor`, `Data`, `Hora`, `FormatoPagamento_id_formato_pagamento`) VALUES (1, 500, '2018-10-11', '10:15:45', 1);
INSERT INTO `mydb`.`Pagamento` (`id_pagamento`, `Valor`, `Data`, `Hora`, `FormatoPagamento_id_formato_pagamento`) VALUES (2, 500, '2018-10-11', '10:18:38', 2);
INSERT INTO `mydb`.`Pagamento` (`id_pagamento`, `Valor`, `Data`, `Hora`, `FormatoPagamento_id_formato_pagamento`) VALUES (3, 500, '2018-10-11', '10:23:07', 3);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Fornecedor`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Fornecedor` (`id_fornecedor`, `cnpj_fornecedor`, `nome_fornecedor`, `email_fornecedor`, `Endereco_id_endereco`) VALUES (1, 123456, 'Juninho Verduras', 'juninho@verdura.com', 3);
INSERT INTO `mydb`.`Fornecedor` (`id_fornecedor`, `cnpj_fornecedor`, `nome_fornecedor`, `email_fornecedor`, `Endereco_id_endereco`) VALUES (2, 123654, 'Frutas da Maria', 'fruta@maria.com', 3);
INSERT INTO `mydb`.`Fornecedor` (`id_fornecedor`, `cnpj_fornecedor`, `nome_fornecedor`, `email_fornecedor`, `Endereco_id_endereco`) VALUES (3, 321456, 'Coca-Cola', 'coca@cola.com', 5);
INSERT INTO `mydb`.`Fornecedor` (`id_fornecedor`, `cnpj_fornecedor`, `nome_fornecedor`, `email_fornecedor`, `Endereco_id_endereco`) VALUES (4, 321654, 'Macaron', 'macaron@food.com', 4);
INSERT INTO `mydb`.`Fornecedor` (`id_fornecedor`, `cnpj_fornecedor`, `nome_fornecedor`, `email_fornecedor`, `Endereco_id_endereco`) VALUES (5, 362514, 'Spaghetti', 'spaghetti@food.com', 4);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`TelefoneFornecedor`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`TelefoneFornecedor` (`id_telefone_fornecedor`, `Telefone_id_telefone`, `Fornecedor_id_fornecedor`) VALUES (1, 4, 1);
INSERT INTO `mydb`.`TelefoneFornecedor` (`id_telefone_fornecedor`, `Telefone_id_telefone`, `Fornecedor_id_fornecedor`) VALUES (2, 4, 2);
INSERT INTO `mydb`.`TelefoneFornecedor` (`id_telefone_fornecedor`, `Telefone_id_telefone`, `Fornecedor_id_fornecedor`) VALUES (3, 5, 3);
INSERT INTO `mydb`.`TelefoneFornecedor` (`id_telefone_fornecedor`, `Telefone_id_telefone`, `Fornecedor_id_fornecedor`) VALUES (4, 5, 4);
INSERT INTO `mydb`.`TelefoneFornecedor` (`id_telefone_fornecedor`, `Telefone_id_telefone`, `Fornecedor_id_fornecedor`) VALUES (5, 4, 5);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Pedido`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Pedido` (`id_pedido`, `valor_pedido`, `data_pedido`, `Pagamento_id_pagamento`) VALUES (1, 123, '2018-05-05', 1);
INSERT INTO `mydb`.`Pedido` (`id_pedido`, `valor_pedido`, `data_pedido`, `Pagamento_id_pagamento`) VALUES (2, 221, '2018-04-25', 2);
INSERT INTO `mydb`.`Pedido` (`id_pedido`, `valor_pedido`, `data_pedido`, `Pagamento_id_pagamento`) VALUES (3, 322, '2018-06-30', 3);
INSERT INTO `mydb`.`Pedido` (`id_pedido`, `valor_pedido`, `data_pedido`, `Pagamento_id_pagamento`) VALUES (4, 53, '2018-08-22', NULL);
INSERT INTO `mydb`.`Pedido` (`id_pedido`, `valor_pedido`, `data_pedido`, `Pagamento_id_pagamento`) VALUES (5, 23, '2018-07-02', NULL);
INSERT INTO `mydb`.`Pedido` (`id_pedido`, `valor_pedido`, `data_pedido`, `Pagamento_id_pagamento`) VALUES (6, 234, '2018-06-11', NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Categoria`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Categoria` (`id_categoria`, `nome_categoria`) VALUES (1, 'Massas');
INSERT INTO `mydb`.`Categoria` (`id_categoria`, `nome_categoria`) VALUES (2, 'Molhos');
INSERT INTO `mydb`.`Categoria` (`id_categoria`, `nome_categoria`) VALUES (3, 'Saladas');
INSERT INTO `mydb`.`Categoria` (`id_categoria`, `nome_categoria`) VALUES (4, 'Acompanhamentos');
INSERT INTO `mydb`.`Categoria` (`id_categoria`, `nome_categoria`) VALUES (5, 'Bebidas');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Produto`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Produto` (`id_produto`, `nome_produto`, `descricao_produto`, `preco_produto`, `qtd_produto_vendidos`, `qtd_produto_estoque`, `Categoria_id_categoria`) VALUES (1, 'Penne', 'Macarrão Penne', 15, 0, 10, 1);
INSERT INTO `mydb`.`Produto` (`id_produto`, `nome_produto`, `descricao_produto`, `preco_produto`, `qtd_produto_vendidos`, `qtd_produto_estoque`, `Categoria_id_categoria`) VALUES (2, 'Espaguete', 'Macarrão Espaguete', 14, 1, 5, 1);
INSERT INTO `mydb`.`Produto` (`id_produto`, `nome_produto`, `descricao_produto`, `preco_produto`, `qtd_produto_vendidos`, `qtd_produto_estoque`, `Categoria_id_categoria`) VALUES (3, 'Coca-Cola', 'Refri Coca', 4, 20, 50, 5);
INSERT INTO `mydb`.`Produto` (`id_produto`, `nome_produto`, `descricao_produto`, `preco_produto`, `qtd_produto_vendidos`, `qtd_produto_estoque`, `Categoria_id_categoria`) VALUES (4, 'Suco de Laranja', 'Uma Delicia', 5, 65, 99, 5);
INSERT INTO `mydb`.`Produto` (`id_produto`, `nome_produto`, `descricao_produto`, `preco_produto`, `qtd_produto_vendidos`, `qtd_produto_estoque`, `Categoria_id_categoria`) VALUES (5, 'Salada de alface', 'Muitas Folhas de Alface', 8, 4, 44, 3);
INSERT INTO `mydb`.`Produto` (`id_produto`, `nome_produto`, `descricao_produto`, `preco_produto`, `qtd_produto_vendidos`, `qtd_produto_estoque`, `Categoria_id_categoria`) VALUES (6, 'Salada de repolho', 'Vários tipos de repolho', 9, 8, 18, 3);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`PedidoProduto`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`PedidoProduto` (`id_pedido_produto`, `Pedido_id_pedido`, `Produto_id_produto`, `qtd_produto`) VALUES (1, 1, 1, 1);
INSERT INTO `mydb`.`PedidoProduto` (`id_pedido_produto`, `Pedido_id_pedido`, `Produto_id_produto`, `qtd_produto`) VALUES (2, 2, 2, 1);
INSERT INTO `mydb`.`PedidoProduto` (`id_pedido_produto`, `Pedido_id_pedido`, `Produto_id_produto`, `qtd_produto`) VALUES (3, 3, 3, 1);
INSERT INTO `mydb`.`PedidoProduto` (`id_pedido_produto`, `Pedido_id_pedido`, `Produto_id_produto`, `qtd_produto`) VALUES (4, 4, 3, 2);
INSERT INTO `mydb`.`PedidoProduto` (`id_pedido_produto`, `Pedido_id_pedido`, `Produto_id_produto`, `qtd_produto`) VALUES (5, 5, 2, 3);
INSERT INTO `mydb`.`PedidoProduto` (`id_pedido_produto`, `Pedido_id_pedido`, `Produto_id_produto`, `qtd_produto`) VALUES (6, 6, 1, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Venda`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Venda` (`id_venda`, `Mesa_id_mesa`, `Pedido_id_pedido`, `Funcionario_id_func`, `Cliente_id_cliente`) VALUES (1, 1, 4, 2, 1);
INSERT INTO `mydb`.`Venda` (`id_venda`, `Mesa_id_mesa`, `Pedido_id_pedido`, `Funcionario_id_func`, `Cliente_id_cliente`) VALUES (2, 2, 5, 2, 2);
INSERT INTO `mydb`.`Venda` (`id_venda`, `Mesa_id_mesa`, `Pedido_id_pedido`, `Funcionario_id_func`, `Cliente_id_cliente`) VALUES (3, 5, 6, 2, 3);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Reposicao`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Reposicao` (`id_reposicao`, `Pedido_id_pedido`, `Fornecedor_id_fornecedor`) VALUES (1, 1, 1);
INSERT INTO `mydb`.`Reposicao` (`id_reposicao`, `Pedido_id_pedido`, `Fornecedor_id_fornecedor`) VALUES (2, 2, 2);
INSERT INTO `mydb`.`Reposicao` (`id_reposicao`, `Pedido_id_pedido`, `Fornecedor_id_fornecedor`) VALUES (3, 3, 3);

COMMIT;

-- pedidos 

SELECT p.id_pedido, p.data_pedido, p.valor_pedido, pr.nome_produto, pp.qtd_produto, c.nome_categoria
FROM Pedido p
INNER JOIN PedidoProduto pp
ON p.id_pedido = pp.Pedido_id_pedido
INNER JOIN Produto pr
ON pp.Produto_id_produto = pr.id_produto
INNER JOIN Categoria c
ON pr.Categoria_id_categoria = c.id_categoria;

-- funcionarios
SELECT * FROM mydb.Funcionario;

-- insere cliente

INSERT INTO Cliente (nome_cliente, cpf_cliente)
VALUES ("Vinicius", 02502502523);

INSERT INTO Telefone (numero_telefone, TipoTelefone_id_tipo_telefone)
VALUES (994586598, 1);

INSERT INTO TelefoneCliente (Telefone_id_telefone, Cliente_id_cliente)
VALUES (6,6);

-- Seleciona um cliente e mostra o telefone

SELECT c.nome_cliente, c.cpf_cliente, t.numero_telefone
FROM Cliente c
INNER JOIN TelefoneCliente tc
ON c.id_cliente = tc.Cliente_id_cliente
INNER JOIN Telefone t
ON tc.Telefone_id_telefone = t.id_telefone
WHERE cpf_cliente = 02502502523;

-- Relacao dos pedidos efetuados

SELECT *
FROM Pedido p
INNER JOIN PedidoProduto pp
ON p.id_pedido = pp.Pedido_id_pedido
INNER JOIN Produto pr
ON pp.Produto_id_produto1 = pr.id_produto;

-- produtos em estoque

SELECT *
FROM Produto p
WHERE p.qtd_produto_estoque > 0;

SELECT * 
FROM Produto p
ORDER BY p.qtd_produto_vendidos DESC LIMIT 1;
